name: deploy

on:
  push:
    branches:
    - master

jobs:
  deploy-book:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
   
    - name: Install R dependencies
      run: |
        sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
        sudo apt-get update
        sudo apt-get install -y r-cran-irkernel libcurl4-openssl-dev 
        
    - name: Setup R lib paths
      run: |
        mkdir -p /home/${USER}/.rpackages
        mkdir -p /home/${USER}/.Rtmp
        echo "R_LIBS=/home/${USER}/.rpackages" >> /home/${USER}/.Renviron
        echo "TMP=/home/${USER}/.Rtmp" >> /home/${USER}/.Renviron
        echo "TEMP=/home/${USER}/.Rtmp" >> /home/${USER}/.Renviron
        echo "TMPDIR=/home/${USER}/.Rtmp" >> /home/${USER}/.Renviron
        
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    
    - name: Install python dependencies
      run: pip install -r requirements.txt
    
    - name: Build the book
      run: jupyter-book build .
      
    - name: Auth google cloud
      uses: google-github-actions/auth@v0.8.0
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: Backup old version
      run: |
        gsutil -m mv gs://${{ secrets.GCLOUD_BUCKET_ID }}/html gs://${{ secrets.GCLOUD_BUCKET_ID }}/html-`date +"%Y-%m-%d-%T"`

    - name: Push to Gcloud storage bucket
      uses: google-github-actions/upload-cloud-storage@v0.10.2
      with:
        path: ./_build/html
        destination: ${{ secrets.GCLOUD_BUCKET_ID }}
  
  mirror-gcloud:                                       
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ secrets.GCLOUD_GIT_ADDRESS }}
          ssh_private_key: ${{ secrets.GCLOUD_GIT_PRIVATE_KEY }}
          ssh_username: ${{ secrets.GCLOUD_GIT_PRIVATE_KEY_ID }}
  
  build-on-vertex-ai:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        
      - name: Auth google cloud
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.GCP_VERTEX_AI_CREDENTIALS }}
      
      - name: Create workbench
        id: instance
        run: |
          INSTANCE_NAME=nosi-ci-test-instance-`date +"%Y-%m-%d-%H-%M-%S"`
          gcloud notebooks instances create $INSTANCE_NAME --container-repository=gcr.io/deeplearning-platform-release/r-cpu.4-1 --container-tag=latest --machine-type=n1-standard-4 --location=us-central1-b --project=${{ secrets.GCLOUD_PROJECT_ID }}
          sleep 240
          echo "::set-output name=INSTANCE_NAME::$INSTANCE_NAME"
          
      - name: Build the book
        run: |
          tar -czf source.tar.gz *
          gcloud compute scp --zone=us-central1-b --project=${{ secrets.GCLOUD_PROJECT_ID }} source.tar.gz ${{ steps.instance.outputs.INSTANCE_NAME }}:~/ 

          BUILD="docker cp source.tar.gz payload-container:/home/jupyter/ && \
          docker exec payload-container bash -c 'cd /home/jupyter/ && mkdir -p source && tar -xf source.tar.gz -C source' && \
          docker exec payload-container bash -c 'cd /home/jupyter/source && pip3 install -r requirements.txt && jupyter-book build .'"

          gcloud compute ssh ${{ steps.instance.outputs.INSTANCE_NAME }} --project=${{ secrets.GCLOUD_PROJECT_ID }} --zone=us-central1-b --command="$BUILD"
      
      - name: Stop workbench instance
        if: always()
        run: |
         gcloud notebooks instances stop ${{ steps.instance.outputs.INSTANCE_NAME }} --project=${{ secrets.GCLOUD_PROJECT_ID }} --location=us-central1-b

          
      
